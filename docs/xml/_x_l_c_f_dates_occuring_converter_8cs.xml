<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_x_l_c_f_dates_occuring_converter_8cs" kind="file" language="C#">
    <compoundname>XLCFDatesOccuringConverter.cs</compoundname>
    <innerclass refid="class_closed_x_m_l_1_1_excel_1_1_x_l_c_f_dates_occurring_converter" prot="public">ClosedXML::Excel::XLCFDatesOccurringConverter</innerclass>
    <innernamespace refid="namespace_closed_x_m_l">ClosedXML</innernamespace>
    <innernamespace refid="namespace_closed_x_m_l_1_1_excel">ClosedXML::Excel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DocumentFormat.OpenXml.Spreadsheet;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_closed_x_m_l_1_1_excel" kindref="compound">ClosedXML.Excel</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7" refid="class_closed_x_m_l_1_1_excel_1_1_x_l_c_f_dates_occurring_converter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_closed_x_m_l_1_1_excel_1_1_x_l_c_f_dates_occurring_converter" kindref="compound">XLCFDatesOccurringConverter</ref><sp/>:<sp/><ref refid="interface_closed_x_m_l_1_1_excel_1_1_i_x_l_c_f_converter" kindref="compound">IXLCFConverter</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/>IDictionary&lt;XLTimePeriod,<sp/>string&gt;<sp/>formulaTemplates<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;XLTimePeriod,<sp/>string&gt;()</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.Today]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FLOOR({0},1)=TODAY()&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.Yesterday]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FLOOR({0},1)=TODAY()-1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.Tomorrow]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FLOOR({0},1)=TODAY()+1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.InTheLast7Days]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(TODAY()-FLOOR({0},1)&lt;=6,FLOOR({0},1)&lt;=TODAY())&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.ThisMonth]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(MONTH({0})=MONTH(TODAY()),YEAR({0})=YEAR(TODAY()))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.LastMonth]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(MONTH({0})=MONTH(EDATE(TODAY(),0-1)),YEAR({0})=YEAR(EDATE(TODAY(),0-1)))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.NextMonth]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(MONTH({0})=MONTH(EDATE(TODAY(),0+1)),YEAR({0})=YEAR(EDATE(TODAY(),0+1)))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.ThisWeek]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(TODAY()-ROUNDDOWN({0},0)&lt;=WEEKDAY(TODAY())-1,ROUNDDOWN({0},0)-TODAY()&lt;=7-WEEKDAY(TODAY()))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.LastWeek]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(TODAY()-ROUNDDOWN({0},0)&lt;=WEEKDAY(TODAY())-1,ROUNDDOWN({0},0)-TODAY()&lt;=7-WEEKDAY(TODAY()))&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[XLTimePeriod.NextWeek]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AND(ROUNDDOWN({0},0)-TODAY()&gt;(7-WEEKDAY(TODAY())),ROUNDDOWN({0},0)-TODAY()&lt;(15-WEEKDAY(TODAY())))&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ConditionalFormattingRule<sp/>Convert(<ref refid="interface_closed_x_m_l_1_1_excel_1_1_i_x_l_conditional_format" kindref="compound">IXLConditionalFormat</ref><sp/>cf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>priority,<sp/><ref refid="class_closed_x_m_l_1_1_excel_1_1_x_l_workbook" kindref="compound">XLWorkbook</ref>.<ref refid="class_closed_x_m_l_1_1_excel_1_1_x_l_workbook_1_1_save_context" kindref="compound">SaveContext</ref><sp/>context)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>conditionalFormattingRule<sp/>=<sp/>XLCFBaseConverter.Convert(cf,<sp/>priority);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cfStyle<sp/>=<sp/>(cf.Style<sp/>as<sp/><ref refid="class_closed_x_m_l_1_1_excel_1_1_x_l_style" kindref="compound">XLStyle</ref>).Value;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cfStyle.Equals(<ref refid="class_closed_x_m_l_1_1_excel_1_1_x_l_workbook" kindref="compound">XLWorkbook</ref>.DefaultStyleValue))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditionalFormattingRule.FormatId<sp/>=<sp/>(UInt32)context.DifferentialFormats[cfStyle.Key];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditionalFormattingRule.TimePeriod<sp/>=<sp/>cf.TimePeriod.ToOpenXml();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>address<sp/>=<sp/>cf.<ref refid="interface_closed_x_m_l_1_1_excel_1_1_i_x_l_conditional_format_1a15f2dc39a857059e1a5051660fc49475" kindref="member">Range</ref>.<ref refid="interface_closed_x_m_l_1_1_excel_1_1_i_x_l_addressable_1a693283492d6857ae738dee06f80bb42d" kindref="member">RangeAddress</ref>.<ref refid="interface_closed_x_m_l_1_1_excel_1_1_i_x_l_range_address_1a68106121f807d13591fb080ec4243f1e" kindref="member">FirstAddress</ref>.ToStringRelative(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>formula<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Formula<sp/>{<sp/>Text<sp/>=<sp/>String.Format(formulaTemplates[cf.TimePeriod],<sp/>address)<sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditionalFormattingRule.Append(formula);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conditionalFormattingRule;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/cverhaar/Coding/ClosedXML/ClosedXML/Excel/ConditionalFormats/Save/XLCFDatesOccuringConverter.cs"/>
  </compounddef>
</doxygen>
